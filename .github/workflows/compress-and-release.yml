name: Compress and Release

on:
  workflow_dispatch:

jobs:
  compress-and-upload:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Generate dynamic tag
        run: |
          TAG_NAME="release-$(date +'%Y%m%d-%H%M%S')"
          echo "TAG_NAME=$TAG_NAME" >> "$GITHUB_ENV"
          echo "RELEASE_NAME=Language Pack - $(date +'%Y-%m-%d %H:%M:%S')" >> "$GITHUB_ENV"

      - name: Build lang.zip from mapped languages
        shell: bash
        run: |
          set -eu
          export LC_ALL=C.UTF-8

          # Allow manual override like: LANGUAGE_DIR=path/to/language
          : "${LANGUAGE_DIR:=}"

          if [ -z "$LANGUAGE_DIR" ]; then
            # Auto-detect a 'language' dir that has both tr_map.txt and mux/
            LANGUAGE_DIR="$(
              find . -type d -name language -print \
              | while IFS= read -r d; do
                  if [ -f "$d/tr_map.txt" ] && [ -d "$d/mux" ]; then
                    printf '%s\n' "$d"
                    break
                  fi
                done
            )"
          fi

          if [ -z "${LANGUAGE_DIR:-}" ]; then
            echo "Could not find a 'language' directory with tr_map.txt and mux/. Aborting."
            exit 1
          fi

          echo "Using LANGUAGE_DIR: $LANGUAGE_DIR"

          MAP="$LANGUAGE_DIR/tr_map.txt"
          SRC="$LANGUAGE_DIR/mux"

          mkdir -p artifacts
          STAGE="$(mktemp -d)"
          DEST="$STAGE/mnt/mmc/MUOS/language"
          mkdir -p "$DEST"

          # For each JSON in mux/, map code -> human name from tr_map.txt; skip if unmapped
          added=0
          while IFS= read -r -d '' f; do
            code="$(basename "$f" .json)"
            if ! name="$(awk -F: -v k="$code" '
                $1==k {
                  n=$2
                  sub(/^[[:space:]]+/,"",n)
                  sub(/[[:space:]\r]+$/,"",n)
                  print n
                  found=1
                }
                END { if (!found) exit 1 }
              ' "$MAP" 2>/dev/null)"; then
              echo "Skipped: $code (no mapping)"
              continue
            fi

            cp "$f" "$DEST/$name.json"
            echo "Added: $code -> $name"
            added=$((added+1))
          done < <(find "$SRC" -type f -name '*.json' -print0 | sort -z)

          if [ "$added" -eq 0 ]; then
            echo "No mapped languages found; aborting."
            exit 1
          fi

          ( cd "$STAGE" && zip -r9X "lang.zip" mnt )
          mv "$STAGE/lang.zip" "artifacts/lang.zip"
          echo "Created artifacts/lang.zip with $added file(s)."

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.TAG_NAME }}
          name: ${{ env.RELEASE_NAME }}
          files: artifacts/lang.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
