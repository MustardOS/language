name: Compress and Release

on:
  workflow_dispatch:

jobs:
  compress-and-upload:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Quick sanity check of what we actually checked out
      - name: Debug â€“ repo layout
        shell: bash
        run: |
          set -eu
          echo "PWD: $(pwd)"
          echo "Top-level:"
          ls -la
          echo
          echo "Expecting files:"
          ls -la tr_map.txt || true
          echo "Sample of mux JSONs:"
          ls -1 mux/*.json 2>/dev/null | head -n 10 || true

      - name: Generate dynamic tag
        run: |
          TAG_NAME="release-$(date +'%Y%m%d-%H%M%S')"
          echo "TAG_NAME=$TAG_NAME" >> "$GITHUB_ENV"
          echo "RELEASE_NAME=Language Pack - $(date +'%Y-%m-%d %H:%M:%S')" >> "$GITHUB_ENV"

      - name: Build lang.zip (root-based)
        shell: bash
        run: |
          set -euxo pipefail

          MAP="tr_map.txt"
          SRC="mux"

          test -f "$MAP"
          test -d "$SRC"

          mkdir -p artifacts
          STAGE="$(mktemp -d)"
          DEST="$STAGE/mnt/mmc/MUOS/language"
          mkdir -p "$DEST"

          echo "Using MAP=$MAP"
          echo "Using SRC=$SRC"
          echo "Staging to $DEST"

          added=0
          # Walk all JSONs and map code -> human name via exact match in tr_map.txt
          while IFS= read -r -d '' f; do
            code="${f##*/}"; code="${code%.json}"
            # Exact key match before first ":"; trims whitespace and CR
            if ! name="$(awk -F: -v k="$code" '
                $1==k {
                  n=$2
                  sub(/^[[:space:]]+/,"",n)
                  sub(/[[:space:]\r]+$/,"",n)
                  print n
                  found=1
                }
                END { if (!found) exit 1 }
              ' "$MAP" 2>/dev/null)"; then
              echo "::notice::Skipped $code (no mapping in tr_map.txt)"
              continue
            fi

            cp "$f" "$DEST/$name.json"
            echo "Added: $code -> $name  => $DEST/$name.json"
            added=$((added+1))
          done < <(find "$SRC" -type f -name '*.json' -print0 | sort -z)

          echo "Total mapped files added: $added"
          if [ "$added" -eq 0 ]; then
            echo "::error::No mapped languages found."
            exit 1
          fi

          echo "Preview of staged tree:"
          ( cd "$STAGE" && find . -maxdepth 6 -type f -print | sort )

          ( cd "$STAGE" && zip -r9X lang.zip mnt )
          mv "$STAGE/lang.zip" artifacts/lang.zip

          echo "Zip contents:"
          unzip -l artifacts/lang.zip || true
          sha256sum artifacts/lang.zip

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.TAG_NAME }}
          name: ${{ env.RELEASE_NAME }}
          files: artifacts/lang.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
